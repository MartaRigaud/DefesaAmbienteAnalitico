ALGORITMO PARA ASSOCIAR TIPO DE ATAQUE DA BASE DE DADOS DO CSIRT A UM TIPO DE ATAQUE DE SCUDO
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Iterator;
public class AssociarTipoAtaqueCSRITcomTipoAtaqueCAPEC {
public static double distance(String s, String t) {
int s_len = s.length();
int t_len = t.length();
if (s_len == 0 && t_len == 0) return 1;
int match_distance = Integer.max(s_len, t_len) / 2 - 1;
boolean[] s_matches = new boolean[s_len];
boolean[] t_matches = new boolean[t_len];
int matches = 0;
int transpositions = 0;
for (int i = 0; i < s_len; i++) {
int start = Integer.max(0, i - match_distance);
int end = Integer.min(i + match_distance + 1,
t_len);
for (int j = start; j < end; j++) {
if (t_matches[j])
continue;
if (s.charAt(i) != t.charAt(j))
continue;
s_matches[i] = true;
t_matches[j] = true;
matches++;
break;
}
}
if (matches == 0)
return 0;
int k = 0;
for (int i = 0; i < s_len; i++) {
if (!s_matches[i])
continue;
while (!t_matches[k])
k++;
if (s.charAt(i) != t.charAt(k))
transpositions++;
k++;
}
return (((double) matches / s_len) + ((double) matches / t_len)
+ (((double) matches - transpositions / 2.0) / matches)) / 3.0;
}
public static ArrayList<String> listaPadraoAtaque(String arquivoPadrao) {
ArrayList<String> listaPadraoAtaque = new ArrayList<String>();
try {
//ler arquivo de padrao de ataque
FileReader arq = new FileReader(arquivoPadrao);
BufferedReader lerArq = new BufferedReader(arq);
String linha = lerArq.readLine(); // lê a primeira linha
while (linha != null) {
String[] camposPadraoAtaque= linha.split(",");
listaPadraoAtaque.add(camposPadraoAtaque[1]);
linha = lerArq.readLine(); // lê da segunda até a última linha
}// fim while
} catch (IOException e) {
System.err.printf("Erro na abertura do arquivo: e.getMessage());
}
return listaPadraoAtaque;
}
public static void gravaLinha(String linha, String nomeArquivoAtaque){
try{
File file = new File(nomeArquivoAtaque);
if(!file.exists()){
file.createNewFile();
}
FileWriter fw = new FileWriter(file, true);
PrintWriter pw = new PrintWriter(fw);
BufferedWriter bw = new BufferedWriter(pw);
bw.write(linha);
bw.newLine();
bw.flush();
bw.close();
} catch (IOException e) {
System.err.printf("Erro na abertura do arquivo");
}
}// end grava linha
public static void lerAtaque(String nomeArquivoAtaque, ArrayList<String> listaPadrao-
Ataque) {
try {
//ler arquivo de padrao de ataque
FileReader arq = new FileReader(nomeArquivoAtaque);
BufferedReader lerArq = new BufferedReader(arq);
String padraoAtaqueString = "";
double percentualSimilaridade = 0;
String linha = lerArq.readLine(); // lê a primeira linha
while (linha != null) {
String[] ataqueSeparadoporCampo = linha.split(",");
// pega o 2 campo da linha que é o nome do ataque e verifica qual o padrão de ataque o
qual se assemelha
int i;
int n = listaPadraoAtaque.size();
// Verifica qual o padrão mais similar ao tipo de ataque
for (i=0; i<n; i++) {
String ataqueSemAspas = ataqueSeparadoporCampo[0].replace("
"","");
double percentualSimilaridadeAtual = distance(ataqueSemAspas, listaPadraoAtaque.get(i));
if ( percentualSimilaridadeAtual > percentualSimilaridade)
{
percentualSimilaridade = percentualSimilaridadeAtual;
padraoAtaqueString = listaPadraoAtaque.get(i);
}
}
System.out.println("Ataque: "+ataqueSeparadoporCampo[0]+" Padrao: "+padraoAtaqueString);
// grava em outro arquivo ataque, padraoMaisSimilar, percentualSimilaridade
gravaLinha(ataqueSeparadoporCampo[0]+","+padraoAtaqueString+","+percentualSimilaridade,
«arquivoNovocomTipoAtaqueCSIRTTipoAtaquesCuDO»);
linha = lerArq.readLine(); // lê da segunda até a última linha
padraoAtaqueString = "";
percentualSimilaridade = 0;
}// fim while
} catch (IOException e)
System.err.printf("Erro na abertura do arquivo");
}
// fim lerPadrao
public static void main(String[] args) {
ArrayList<String> listaPadraoAtaque = listaPadraoAtaque(«arquivocomTipodeAtaquedosCuDO»);
lerAtaque(«arquivocomTipoAtaquebaseIncidentesCSIRT»);
}
}
